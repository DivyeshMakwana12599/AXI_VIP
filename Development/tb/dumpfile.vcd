$date
	Thu Jun 16 10:45:27 2022
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 db962d2dd3c06260 $end


$scope module $unit $end
$upscope $end


$scope module ei_axi4_helper_functions $end

$scope function calculate_size_aligned_address $end
$var reg 32 ! calculate_size_aligned_address [31:0] $end
$var reg 32 " address [31:0] $end
$var reg 3 # awsize [2:0] $end
$upscope $end


$scope function get_wstrb $end
$var reg 8 $ get_wstrb [7:0] $end
$var reg 32 % awaddr [31:0] $end
$var reg 2 & awburst [1:0] $end
$var reg 3 ' awsize [2:0] $end
$var reg 8 ( awlen [7:0] $end
$var reg 32 ) beat_no [31:0] $end
$var reg 6 * transfer_size [5:0] $end

$scope begin unnamed$$_0 $end
$var reg 32 + lower_wrap_boundary [31:0] $end
$var reg 32 , upper_wrap_boundary [31:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module assertion $end
$var reg 1 - aclk $end
$var reg 1 . aresetn $end
$var reg 32 / awaddr [31:0] $end
$var reg 8 0 awlen [7:0] $end
$var reg 3 1 awsize [2:0] $end
$var reg 2 2 awburst [1:0] $end
$var reg 1 3 awvalid $end
$var reg 1 4 awready $end
$var reg 64 5 wdata [63:0] $end
$var reg 8 6 wstrb [7:0] $end
$var reg 1 7 wlast $end
$var reg 1 8 wvalid $end
$var reg 1 9 wready $end
$var reg 2 : bresp [1:0] $end
$var reg 1 ; bvalid $end
$var reg 1 < bready $end
$var reg 32 = araddr [31:0] $end
$var reg 2 > arburst [1:0] $end
$var reg 8 ? arlen [7:0] $end
$var reg 3 @ arsize [2:0] $end
$var reg 1 A arvalid $end
$var reg 1 B arready $end
$var reg 64 C rdata [63:0] $end
$var reg 2 D rresp [1:0] $end
$var reg 1 E rlast $end
$var reg 1 F rvalid $end
$var reg 1 G rready $end
$var wire 1 H temp_aresetn $end

$scope function pass_print_f $end
$upscope $end


$scope function fail_print_f $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_042 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_007 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_007 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_008 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_008 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_006 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_006 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_014 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_014 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_016 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_016 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_018 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_018 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_020 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_020 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_021 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_021 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_023 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_023 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_025 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_025 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_027 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_027 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_028 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_028 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_030 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_030 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_032 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_032 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_035 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_035 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_037 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_037 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_039 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_039 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_041 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_041 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_042 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_042 $end
$upscope $end

$upscope $end


$scope module ei_axi4_top $end
$var reg 1 I aclk $end
$var reg 1 J aresetn $end
$var reg 1 K dummy $end

$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_4 $end
$upscope $end


$scope module pif $end
$var reg 1 L aresetn $end
$var reg 1 M bvalid $end
$var reg 1 N bready $end
$var reg 1 O arvalid $end
$var reg 1 P aclk $end
$var reg 32 Q awaddr [31:0] $end
$var reg 8 R awlen [7:0] $end
$var reg 3 S awsize [2:0] $end
$var reg 2 T awburst [1:0] $end
$var reg 1 U awvalid $end
$var reg 1 V awready $end
$var reg 64 W wdata [63:0] $end
$var reg 8 X wstrb [7:0] $end
$var reg 1 Y wlast $end
$var reg 1 Z wvalid $end
$var reg 1 [ wready $end
$var reg 2 \ bresp [1:0] $end
$var reg 32 ] araddr [31:0] $end
$var reg 2 ^ arburst [1:0] $end
$var reg 8 _ arlen [7:0] $end
$var reg 3 ` arsize [2:0] $end
$var reg 1 a arready $end
$var reg 64 b rdata [63:0] $end
$var reg 2 c rresp [1:0] $end
$var reg 1 d rlast $end
$var reg 1 e rvalid $end
$var reg 1 f rready $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
b01101101001011001110000001111110 "
b010 #
b01101101001011001110000001111100 !
b01101101001011001110000001111100 %
b01 &
b00000011 (
b010 '
b00000000000000000000000000000011 )
b11110000 $
b000100 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx =
bxx >
bxxxxxxxx ?
bxxx @
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxx 2
bxxxxxxxx 0
bxxx 1
bxx :
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
bxx D
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
bxxxxxxxx 6
0I
1J
bxx c
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx b
bxxx `
bxxxxxxxx _
bxx ^
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ]
bxx \
bxxxxxxxx X
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx W
bxx T
bxxx S
bxxxxxxxx R
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q
0K
x-
x.
x3
x4
x7
x8
x9
x;
x<
xA
xB
xE
xF
xG
xH
0P
1L
xa
xO
xV
xU
xN
xM
xd
xf
xe
xY
x[
xZ
$end
