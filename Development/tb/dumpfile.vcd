$date
	Fri Jun 17 13:22:03 2022
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 db962d2dd3c06260 $end


$scope module $unit $end
$upscope $end


$scope module ei_axi4_helper_functions $end

$scope function calculate_size_aligned_address $end
$var reg 32 ! calculate_size_aligned_address [31:0] $end
$var reg 32 " address [31:0] $end
$var reg 3 # awsize [2:0] $end
$upscope $end


$scope function get_wstrb $end
$var reg 8 $ get_wstrb [7:0] $end
$var reg 32 % awaddr [31:0] $end
$var reg 2 & awburst [1:0] $end
$var reg 3 ' awsize [2:0] $end
$var reg 8 ( awlen [7:0] $end
$var reg 32 ) beat_no [31:0] $end
$var reg 6 * transfer_size [5:0] $end

$scope begin unnamed$$_0 $end
$var reg 32 + lower_wrap_boundary [31:0] $end
$var reg 32 , upper_wrap_boundary [31:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module assertion $end
$var reg 1 - aclk $end
$var reg 1 . aresetn $end
$var reg 32 / awaddr [31:0] $end
$var reg 8 0 awlen [7:0] $end
$var reg 3 1 awsize [2:0] $end
$var reg 2 2 awburst [1:0] $end
$var reg 1 3 awvalid $end
$var reg 1 4 awready $end
$var reg 64 5 wdata [63:0] $end
$var reg 8 6 wstrb [7:0] $end
$var reg 1 7 wlast $end
$var reg 1 8 wvalid $end
$var reg 1 9 wready $end
$var reg 2 : bresp [1:0] $end
$var reg 1 ; bvalid $end
$var reg 1 < bready $end
$var reg 32 = araddr [31:0] $end
$var reg 2 > arburst [1:0] $end
$var reg 8 ? arlen [7:0] $end
$var reg 3 @ arsize [2:0] $end
$var reg 1 A arvalid $end
$var reg 1 B arready $end
$var reg 64 C rdata [63:0] $end
$var reg 2 D rresp [1:0] $end
$var reg 1 E rlast $end
$var reg 1 F rvalid $end
$var reg 1 G rready $end
$var wire 1 H temp_aresetn $end

$scope function pass_print_f $end
$upscope $end


$scope function fail_print_f $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp______assert_AXI4_ASSERTION_042 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_002 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_003 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_005 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_001 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_004 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_007 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_007 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_008 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_008 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_006 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_006 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_010 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_011 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_013 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_009 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_012 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_014 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_014 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_016 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_016 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_018 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_018 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_020 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_020 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_021 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_021 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_023 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_023 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_025 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_025 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_027 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_027 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_028 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_028 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_030 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_030 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_032 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_032 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_035 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_035 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_037 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_037 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_039 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_039 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_041 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_041 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_015 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_017 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_019 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_022 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_024 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_026 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_031 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_033 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_038 $end
$upscope $end


$scope task _$$txp_pass_action_AXI4_ASSERTION_042 $end
$upscope $end


$scope task _$$txp_fail_action_AXI4_ASSERTION_042 $end
$upscope $end

$upscope $end


$scope module ei_axi4_top $end
$var reg 1 I aclk $end
$var reg 1 J aresetn $end
$var reg 1 K dummy $end

$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_4 $end
$upscope $end


$scope module pif $end
$var reg 1 L aresetn $end
$var reg 1 M awvalid $end
$var reg 1 N awready $end
$var reg 1 O bvalid $end
$var reg 1 P arvalid $end
$var reg 1 Q aclk $end
$var reg 32 R awaddr [31:0] $end
$var reg 8 S awlen [7:0] $end
$var reg 3 T awsize [2:0] $end
$var reg 2 U awburst [1:0] $end
$var reg 64 V wdata [63:0] $end
$var reg 8 W wstrb [7:0] $end
$var reg 1 X wlast $end
$var reg 1 Y wvalid $end
$var reg 1 Z wready $end
$var reg 2 [ bresp [1:0] $end
$var reg 1 \ bready $end
$var reg 32 ] araddr [31:0] $end
$var reg 2 ^ arburst [1:0] $end
$var reg 8 _ arlen [7:0] $end
$var reg 3 ` arsize [2:0] $end
$var reg 1 a arready $end
$var reg 64 b rdata [63:0] $end
$var reg 2 c rresp [1:0] $end
$var reg 1 d rlast $end
$var reg 1 e rvalid $end
$var reg 1 f rready $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
b00000000010100110100100101001010 "
b010 #
b00000000010100110100100101001000 !
b00000000010100110100100101001000 %
b01 &
b00000011 (
b010 '
b00000000000000000000000000000011 )
b00001111 $
b000100 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx =
bxx >
bxxxxxxxx ?
bxxx @
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxx 2
bxxxxxxxx 0
bxxx 1
bxx :
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
bxx D
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
bxxxxxxxx 6
0I
1J
bxx c
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx b
bxxx `
bxxxxxxxx _
bxx ^
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ]
bxx [
bxxxxxxxx W
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx V
bxx U
bxxx T
bxxxxxxxx S
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx R
0K
x-
x.
x3
x4
x7
x8
x9
x;
x<
xA
xB
xE
xF
xG
xH
0Q
1L
xa
xP
1N
xM
x\
xO
xd
xf
xe
xX
xZ
xY
$end
#5
1I
1Q
#6
1Z
1a
1M
b00111010001111011100001110001010 R
b01 U
b00000011 S
b010 T
#10
0I
0Q
#15
1I
1Q
#16
0M
0X
0N
1Y
b0101111001111110000010000101011100110011000100000010101011110110 V
b00001100 W
#20
0I
0Q
#25
1I
1Q
#26
b1000010101111010100010100000011010100010001110110001101000101110 V
b11110000 W
1M
b00101001111100000101011101001000 R
#30
0I
0Q
#35
1I
1Q
1N
#36
b0111110100011110100110101001011101011110000110100101100100010000 V
b00001111 W
0M
0N
#40
0I
0Q
#45
1I
1Q
#46
b0010000011001100111111001011011111010111110101010100101011111110 V
b11110000 W
1X
1M
b01100100010011101010010101000100 R
#50
0I
0Q
#55
1I
1Q
1N
#56
0Y
0X
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx V
bxxxxxxxx W
0M
0N
#60
0I
0Q
#65
1I
1Q
#66
0Z
1O
b00 [
1M
b00000000010100110100100100111110 R
#70
0I
0Q
#75
1I
1Q
1N
#76
1\
0M
0N
#80
0I
0Q
#85
1I
1Q
#86
bzz [
0O
1Z
1Y
b1111111111001001000001011000111100101000011001100001000100000101 V
b11000000 W
#90
0I
0Q
#95
1I
1Q
